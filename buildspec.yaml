version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo Installing dependencies for the client...
      - apt-get update && apt-get install -y jq
      - cd client
      - npm install
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URL
      - echo Retrieving Docker Hub credentials from Secrets Manager...
      - export DOCKER_HUB_CREDENTIALS=$(aws secretsmanager get-secret-value --secret-id $DOCKER_HUB_SECRET_NAME --query 'SecretString' --output text)
      - export DOCKER_HUB_USERNAME=$(echo $DOCKER_HUB_CREDENTIALS | jq -r '.username')
      - export DOCKER_HUB_PASSWORD=$(echo $DOCKER_HUB_CREDENTIALS | jq -r '.password')
      - echo Logging in to Docker Hub...
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
  build:
    commands:
      - echo Build started on `date`
      - echo Building the client...
      - npm run build
      - echo Returning to the root directory...
      - cd ..
      - echo Building the Docker image...
      - docker build -t poker-planning ./server
      - docker images  # List Docker images to verify
      - docker tag poker-planning:latest $ECR_REPOSITORY_URL/poker-planning:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ECR_REPOSITORY_URL/poker-planning:latest
      - echo Writing image definitions file...
      - printf '[{"name":"poker-planning","imageUri":"%s/poker-planning:latest"}]' $ECR_REPOSITORY_URL > imagedefinitions.json
      - echo Deploying client to S3...
      - aws s3 sync client/dist s3://$S3_BUCKET_NAME --delete
      - echo Invalidating CloudFront cache...
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
artifacts:
  files:
    - imagedefinitions.json
    - client/dist/**